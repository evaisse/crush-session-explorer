name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  check-branch:
    runs-on: ubuntu-latest
    outputs:
      is-master: ${{ steps.check.outputs.is-master }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if tag is on master branch
        id: check
        run: |
          # Get the commit hash of the tag
          TAG_COMMIT=$(git rev-list -n 1 ${{ github.ref }})
          
          # Check if this commit is on master branch
          if git merge-base --is-ancestor $TAG_COMMIT origin/master && \
             git merge-base --is-ancestor origin/master $TAG_COMMIT; then
            echo "is-master=true" >> $GITHUB_OUTPUT
            echo "✅ Tag is on master branch"
          else
            echo "is-master=false" >> $GITHUB_OUTPUT
            echo "❌ Tag is not on master branch"
            exit 1
          fi

  test:
    needs: check-branch
    if: needs.check-branch.outputs.is-master == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.4'

      - name: Install dependencies
        run: make deps

      - name: Run tests
        run: make test

  build:
    needs: [check-branch, test]
    if: needs.check-branch.outputs.is-master == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            suffix: linux-amd64
          - goos: linux
            goarch: arm64
            suffix: linux-arm64
          - goos: windows
            goarch: amd64
            suffix: windows-amd64.exe
          - goos: windows
            goarch: arm64
            suffix: windows-arm64.exe
          - goos: darwin
            goarch: amd64
            suffix: darwin-amd64
          - goos: darwin
            goarch: arm64
            suffix: darwin-arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.4'

      - name: Install dependencies
        run: make deps

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p bin
          go build -o bin/crush-md-${{ matrix.suffix }} ./cmd/crush-md

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: crush-md-${{ matrix.suffix }}
          path: bin/crush-md-${{ matrix.suffix }}

  release:
    needs: [check-branch, build]
    if: needs.check-branch.outputs.is-master == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir -p bin
          find artifacts -name "crush-md-*" -type f -exec cp {} bin/ \;
          cd bin
          sha256sum * > checksums.txt

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.version.outputs.VERSION }}
          body: |
            ## Release ${{ steps.version.outputs.VERSION }}
            
            ### Installation
            
            **NPM (Recommended):**
            ```bash
            npm install -g crush-session-explorer
            ```
            
            **Direct Download:**
            - **Linux (amd64)**: `crush-md-linux-amd64`
            - **Linux (arm64)**: `crush-md-linux-arm64`
            - **Windows (amd64)**: `crush-md-windows-amd64.exe`
            - **Windows (arm64)**: `crush-md-windows-arm64.exe`
            - **macOS (amd64)**: `crush-md-darwin-amd64`  
            - **macOS (arm64)**: `crush-md-darwin-arm64`
            
            ### Manual Installation (Direct Download)
            1. Download the appropriate binary for your platform
            2. Make it executable: `chmod +x crush-md-*` (Linux/macOS)
            3. Move to your PATH: `mv crush-md-* /usr/local/bin/crush-md`
            
            ### Verification
            Use the provided `checksums.txt` to verify the integrity of downloaded files:
            ```bash
            sha256sum -c checksums.txt
            ```
          files: |
            bin/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  npm-publish:
    needs: [check-branch, release]
    if: needs.check-branch.outputs.is-master == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Get version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Publishing version $VERSION to npm"

      - name: Update package.json version
        run: |
          npm version ${{ steps.version.outputs.VERSION }} --no-git-tag-version --allow-same-version

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}